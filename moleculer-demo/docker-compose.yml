version: "3.3"

services:

  traefik:
    image: traefik:v2.1
    container_name: traefik_container
    # command: 
    #   # - "--api.insecure=true" # Don't do that in production!
    #   # - "--providers.docker=true"
    #   # - "--providers.docker.exposedbydefault=false"
    command: tail -f /dev/null
      # - "--api"
      # - "--docker"
      # - "--docker.watch"

    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=8080"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
    networks:
      - internal
      - default

  api:
    build:
      context: .
    image: moleculer-demo
    container_name: api_container
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      # - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
      - "traefik.backend=api"

      - "traefik.port=3000"
      - "traefik.frontend.entryPoints=http"
      - "traefik.frontend.rule=PathPrefix:/"
    networks:
      - internal

  mongo:
    image: mongo:4
    container_name: mongodb_container
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=sanhdb
      - MONGO_INITDB_ROOT_USERNAME=sanh
      - MONGO_INITDB_ROOT_PASSWORD=1
    volumes:
      - mydata:/var/lib/mongodb/data
    networks:
      - internal

  nats:
    image: nats:2
    container_name: nats_container
    labels:
      - "traefik.enable=false"
    networks:
      - internal

  products:
    build:
      context: .
    image: moleculer-demo
    container_name: products_container
    command: tail -f /dev/null
    env_file: docker-compose.env
    environment:
      SERVICES: products
      DB_HOST: mongo
      DB_NAME: sanhdb
      DB_USER: sanh
      DB_PWD: 1
    depends_on:
      - mongo
      - nats
    networks:
      - internal
    volumes:
      - mydata:/home/node/app

  orders:
    build:
      context: .
    image: moleculer-demo
    container_name: orders_container
    command: tail -f /dev/null
    env_file: docker-compose.env
    environment:
      SERVICES: orders
      DB_HOST: mongo
      DB_NAME: sanhdb
      DB_USER: sanh
      DB_PWD: 1
    depends_on:
      - nats
      - mongo
    networks:
      - internal
    volumes:
      - mydata:/home/node/app

networks:
  internal:

volumes:
  mydata: 